<!DOCTYPE html>
<html>
 <head>
  <!--
Web Developer: Renats Kevrels (ex. Zozula)
Site: http://www.onclick.lv
Contact: info [at] onclick.lv
Skype: renat2985
Twitter: @Ramzies
Facebook: http://www.facebook.com/renat2985
GitHub: https://github.com/renat2985
From: Latvia, Valmiera
-->
  <meta http-equiv="Content-type" content="text/html; charset=utf-8">
  <link rel="shortcut icon" type="image/x-icon" href="favicon.ico">
  <script defer src="js/build.chart.js?v17.12.2018" charset="utf-8"></script>
  <!-- <link rel="stylesheet" type="text/css" href="css/chartist.min.css">
<script src="js/chartist.min.js" charset="utf-8"></script> -->
  <link rel="stylesheet" type="text/css" href="css/build.css?v17.12.2018">
  <!-- <link rel="stylesheet" type="text/css" href="css/bootstrap.min.css">
<link rel="stylesheet" type="text/css" href="css/style.css"> -->
  <script defer type="text/javascript" src="js/function.js?v17.12.2018"></script>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title id="h-title">Device Page</title>
  <style>
   body {
    background-color:#e6e7e9;
   }
   #header {
    margin:0;
    padding:0;
    background-color:#6c757e;
    box-shadow: none;
    border-radius: 0;
   }
   #header h1, #header h3{
    color: #fff;
   }
   .container-full {
    margin: 0 auto;
    width: 100%;
   }
   .right-block {
    background-color:#a0d468;
   }
   .block {
    border-radius: 10px;
   }
   #content-right .block {
    background-color:#a0d468;
    box-shadow:none;
   }
   .fix-block .col-md-6 {
    width:33.33333333%;
   }
  </style>

  <script type="text/javascript">
   var jsonInResponse, jsonLang;
   window.onload = function() {
    deviceList('first');
   }

   function deviceList(stage,sorting) {
    html('content',' ');
    html('header-left',' ');
    html('header-right',' ');
    ajax.get('/ssdp.list.json?'+Math.random(),{},function(response) {
     var ipDevice=JSON.parse(response);
     if (Object.keys(ipDevice).length == 0) {
      location.href = "/page.htm?first-connect";
     }
     for (var i in ipDevice) {
      if (ipDevice[i] == '0.0.0.0') {
       location.href = "/page.htm?first-connect";
      } else {
       loadModule(ipDevice[i],stage,sorting,ipDevice);
      }
      break;
     }
    },true);
    if (stage == 'first') {
     html("space-button", ' ');
    }
   }

   function loadModule(ip,stage,sorting,ipDevice) {
    ajax.get('http://'+ip+'/modules.json',{},function(response) {
     var ipModule=JSON.parse(response);
     // Сортировка
     if (stage == 'first' && sorting == null || searchModule(ipModule.module,sorting)) {

      if (window.location.hostname == ip) {
       ajax.get('http://'+ip+'/lang/lang.'+ipModule.lang+'.json',{},function(response) {
        jsonLang=JSON.parse(response);
        loadBlock(ip,'first',ipModule.module);
        setContent('first','index5.htm');
        for (var i in ipDevice) {
         if (window.location.hostname != ipDevice[i]) {
          loadModule(ipDevice[i],stage,sorting);
         }
        }
       },true);
      } else {
       loadBlock(ip,'first',ipModule.module);
      }

     }
    },true);
   }

   function loadBlock(ip, stage, modules) {
    ajax.get('http://'+ip+'/config.live.json?'+Math.random(),{},function(response) {
     var jsonInResponse0 = JSON.parse(response);
     ajax.get('http://'+ip+'/config.options.json?'+Math.random(),{},function(response) {
      var jsonInResponse1 = JSON.parse(response);
      jsonInResponse = mergeObject(jsonInResponse0, jsonInResponse1, jsonLang);
      if(/relay/.test(modules)) {
       for (var i = 0; i < 6; i++) {
        if (!searchModule(modules,"relay"+i)){
         jsonInResponse["hiddenRelay"+i] = 'hidden';
        }
       }
       loadBlock2('relay','timer.save',ip, jsonInResponse.space, stage, jsonInResponse);
      }
      if (searchModuleOld(modules,"rgb")){
       loadBlock2('rgb','timer.save',ip, jsonInResponse.space, stage, jsonInResponse);
      }
      // if (searchModule(modules,"rfLivolo")){
      //  loadBlock2('livolo','timer.save',ip, jsonInResponse.space, stage, jsonInResponse);
      // }
      if (searchModule(modules,"jalousie")){
       loadBlock2('jalousie','timer.save',ip, jsonInResponse.space, stage, jsonInResponse);
      }
      if (searchModule(modules,"leakag")){
       loadBlock2('leakag','timer.save',ip, jsonInResponse.space, stage, jsonInResponse);
      }
      // if (searchModule(modules,"temperature")){
      //  loadBlock2('temperature','charts.json?data=temperature&data1=highAlarmTemp&data2=lowAlarmTemp&',ip, jsonInResponse.space, stage, jsonInResponse);
      // }

      if(/temperature/.test(modules)) {
       for (var i = 0; i < 10; i++) {
       if (searchModuleOld(modules,'temperature'+(i==0?'':i))){
         loadBlock2('temperature','charts.json?data=temperature&data1=highAlarmTemp&data2=lowAlarmTemp&',ip, jsonInResponse.space, stage, jsonInResponse,i);
        }
       }
      }

      if (searchModule(modules,"humidity")){
       loadBlock2('humidity','charts.json?data=humidity&data1=highAlarmHum&data2=lowAlarmHum&',ip, jsonInResponse.space, stage, jsonInResponse);
      }
      if (searchModule(modules,"A0")){
       loadBlock2('A0','charts.json?data=A0&data1=highAlarmA0&data2=lowAlarmA0&',ip, jsonInResponse.space, stage, jsonInResponse);
      }
      if (searchModule(modules,"pow")){
       loadBlock2('pow','charts.json?data=pow&data1=highAlarmPow&data2=lowAlarmPow&',ip, jsonInResponse.space, stage, jsonInResponse);
      }
      if (!stage && jsonInResponse.space == "relay" || jsonInResponse.space == "rgb" || jsonInResponse.space == "jalousie" || jsonInResponse.space == "leakag"){
       loadBlock2(jsonInResponse.space,'timer.save',ip, jsonInResponse.space, stage, jsonInResponse);
      }
      if (window.location.hostname == ip && stage == 'first') {
       var new_string2;
       var bodyData = document.getElementsByTagName('body')[0].innerHTML;
       for (var key in jsonInResponse) {
        new_string2 = bodyData.replace(new RegExp('{{'+key+'}}', 'g'), jsonInResponse[key]);
        bodyData = new_string2;
       }
       document.getElementsByTagName('body')[0].innerHTML = new_string2;
       if (searchModule(modules,"upgrade")){
        loadUpdate('tretyakovsa/Sonoff_WiFi_switch', jsonInResponse.spiffsData, jsonInResponse.LangUpgrade, 10000);
       }
       //setContent('first');
      }
     },true);
    },true);
   }

   function loadBlock2(page, jsonPage, ip, content, stage, jsonInResponse,idModule){
    if (stage == 'first'){
     var element = elem(content);
     if (typeof(element) != 'undefined' && element != null && element != ''){
     } else {
      elem("content").innerHTML += '<h2 id="'+content+'-title">'+content+'<\/h2><hr><div class="row" id="'+content+'"><\/div>';
      elem("space-button").innerHTML += '<a href="#'+content+'-title" class="btn btn-default">'+content+'<\/a>';
     }
     elem(content).innerHTML+='<div id="block-'+ip+'-'+page+'" class="fix-block"><div class="col-md-4"><div class="block"><div class="loader"><\/div> <center><a href="http://'+ip+'">http://'+ip+'<\/a><\/center><\/div><\/div><\/div>';
    }
    ajax.get('http://'+ip+'/block-'+page+'.htm',{},function(response) {
     var data = response;
     ajax.get('http://'+ip+'/'+jsonPage+'.json',{},function(response) {
      var timers=JSON.parse(response);
      var timerList = '';
       const template = (x,y) => ' <span class="label label-'+x+'">'+y+'</span> ';
      if (timers.timer) {
       timers.timer.sort(function(a,b){return (a.time > b.time) ? 1 : ((b.time > a.time) ? -1 : 0);});
       for (var i = 0; i < timers.timer.length; i++) {
        if(timers.timer[i].module == page) {
         if (timers.timer[i].trigger == "on") {timers.timer[i].trigger = template('success',jsonInResponse["LangOnM"]);}
         if (timers.timer[i].trigger == "off") {timers.timer[i].trigger = template('danger',jsonInResponse["LangOffM"]);}
         if (timers.timer[i].trigger == "not") {timers.timer[i].trigger = template('info',jsonInResponse["LangSwitch"]);}
         if (timers.timer[i].trigger == "open") {timers.timer[i].trigger = template('success',jsonInResponse["LangOpen"]);}
         if (timers.timer[i].trigger == "close") {timers.timer[i].trigger = template('danger',jsonInResponse["LangClose"]);}
         timers.timer[i].day = jsonInResponse["Lang"+timers.timer[i].day];
         timerList += '<li><b>'+timers.timer[i].trigger+' '+timers.timer[i].day.substring(0,7)+'.<\/b> '+timers.timer[i].time+(timers.timer[i].work?' - '+timers.timer[i].work:'')+'<\/li>';
        }
       }
       jsonInResponse.timerList = (timerList?timerList:'<li>'+jsonInResponse.LangNoTimers+'<\/li>');
       jsonInResponse.timerListHidden = 'hidden';
      }

      jsonInResponse = mergeObject(jsonInResponse, timers);
      var theCookies = document.cookie.split(';');
      for (var i = 1 ; i <= theCookies.length; i++) {
       jsonInResponse[theCookies[i-1].split("=")[0].replace(/^ /,'')] = theCookies[i-1].split("=")[1];
      }
      jsonInResponse.ip = ip;
      for (var i = 0; i < 6; i++) {
       jsonInResponse["relay"+i] = (jsonInResponse["relay"+i]?jsonInResponse.LangOff:jsonInResponse.LangOn);
      }
      jsonInResponse.rgb = (jsonInResponse.rgb?jsonInResponse.LangOff:jsonInResponse.LangOn);
      jsonInResponse.jalousie = (jsonInResponse.jalousie?jsonInResponse.LangClose:jsonInResponse.LangOpen);
      jsonInResponse.stateLeakag = (jsonInResponse.stateLeakag?jsonInResponse.LangOff:jsonInResponse.LangOn);
      if (page == 'A0') {
       jsonInResponse.analogId = 'A0json'+ip.replace(/[^a-z0-9]/gi,'');
       setTimeout("loadChart('"+jsonInResponse.analogId+"','http://"+ip+"/charts.json?data=A0&data1=highAlarmA0&data2=lowAlarmA0')", 1500);
      }
      if (page == 'temperature') {
       jsonInResponse.sensorId = 'temperaturejson'+ip.replace(/[^a-z0-9]/gi,'');
       setTimeout("loadChart('"+jsonInResponse.sensorId+"','http://"+ip+"/charts.json?data=temperature"+(idModule?idModule:'')+"&data1=highAlarmTemp"+(idModule?idModule:'')+"&data2=lowAlarmTemp"+(idModule?idModule:'')+"')", 1500);
      }
      if (page == 'humidity') {
       jsonInResponse.sensorId = 'humidityjson'+ip.replace(/[^a-z0-9]/gi,'');
       setTimeout("loadChart('"+jsonInResponse.sensorId+"','http://"+ip+"/charts.json?data=humidity&data1=highAlаrmHum&data2=lowAlаrmHum')", 1500);
      }
      if (page == 'pow') {
       jsonInResponse.powId = 'powjson'+ip.replace(/[^a-z0-9]/gi,'');
       setTimeout("loadChart('"+jsonInResponse.powId+"','http://"+ip+"/charts.json?data=pow&data1=highAlarmPow&data2=lowAlarmPow')", 1500);
      }
      var new_string;
      for (var key in jsonInResponse) {
       new_string = data.replace(new RegExp('{{'+key+'}}', 'g'), jsonInResponse[key]);
       data = new_string;
      }
      elem("block-"+ip+"-"+page).innerHTML=new_string;
     },true);
    },true);
   }

   function ajaxm(ipHost, pagename, submit, loadB) {
    var old_submit = submit.value;
    var d = new Date(); // for now
    var datetext = d.getHours()+":"+d.getMinutes()+":"+d.getSeconds();
    var parent = submit.parentNode.childNodes[1].innerHTML;
    submit.value = 'Loading...';
    ajax.get('http://'+ipHost+'/'+pagename,{},function(response) {
     submit.value=old_submit;
     var response=JSON.parse(response);
     if (response.title && response.title!='undefined') {
      if (submit.tagName == 'INPUT') {submit.value = jsonLang[response.title.slice(2, -2)];}
     }
    },true);
   }
  </script>
 </head>
 <body>
  <div id="news"></div>
  <ul id="url-content" class="hidden" onclick="elem('container').style.zIndex=0;"></ul>
  <div class="container-full" id="container" onclick="this.style.position='relative';this.style.zIndex=10">
   <div id="header">
    <div id="header-left" class="col-sm-12 col-md-2"></div>
    <div id="space-button" class="col-md-6"></div>
    <div id="header-right" class="col-md-4" style="text-align:right;"></div>
   </div>
   <div class="col-sm-12 col-md-9" id="top-content"></div>
   <div class="col-sm-12 col-md-9" id="content"></div>
   <div class="col-sm-12 col-md-3 right-block">
    <div class="col-md-12" id="content-right"></div>
   </div>
  </div>
  <div id="edit-content" class="hidden" onclick="elem('container').style.zIndex=0;">
   <textarea class="form-control" onkeyup="isValidJson(this.value,'edit-json')" spellcheck="false" id="edit-json"></textarea>
   <div id="error-json"></div>
   <div class="btn-group btn-block">
    <input class="btn btn-danger" style="width:80%" id="edit-save" onclick="httpDelete('/index5.htm.json.gz');send_request_edit(this, val('edit-json'),'index5.htm.json');toggle('edit-content');toggle('url-content');" value="Save" type="button">
    <a class="btn btn-info" style="width:20%" href="#" id="download-json" download=""><i class="download-img"></i></a>
   </div>
  </div>
 </body>
</html>
